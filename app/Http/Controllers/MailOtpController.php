<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Session;
use Illuminate\Support\Facades\Http;

class MailOtpController extends Controller
{
    // ‚úÖ 1. ‡∏™‡πà‡∏á OTP ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    public function sendMailOtp(Request $request)
    {
        $email = $request->input('email');
        echo $email;
        // // üî• ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•
        // if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        //     return response()->json(['error' => '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'], 400);
        // }

        // üî• ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠ OTP ‡∏ñ‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏Ç‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å 90 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
        if (Session::has('otp_request_time') && time() - Session::get('otp_request_time') < 90) {
            return response()->json(['error' => '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ 90 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏Ç‡∏≠ OTP ‡πÉ‡∏´‡∏°‡πà'], 429);
        }

        // ‚úÖ ‡∏î‡∏∂‡∏á API Key ‡πÅ‡∏•‡∏∞ Template UUID ‡∏à‡∏≤‡∏Å .env
        $apiKey = env('THAIBULKSMS_API_KEY');
        $templateUuid = env('THAIBULKSMS_TEMPLATE_UUID');

        // ‚úÖ ‡∏™‡πà‡∏á OTP ‡∏ú‡πà‡∏≤‡∏ô API
        $response = Http::withHeaders([
            'accept' => 'application/json',
            'authorization' => 'Basic ' . base64_encode($apiKey),
            'content-type' => 'application/json'
        ])->post('https://email-api.thaibulksms.com/email/v1/otp/send', [
            'template_uuid' => $templateUuid,
            'recipient_email' => $email
        ]);

        // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏™‡πà‡∏á OTP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÑ‡∏´‡∏°
        if ($response->successful()) {
            // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏• + ‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠ OTP ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Session
            Session::put('otp_email', $email);
            Session::put('otp_request_time', time());

            return response()->json(['success' => 'OTP ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì']);
        } else {
            return response()->json([
                'error' => '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á OTP ‡πÑ‡∏î‡πâ',
                'details' => $response->json()
            ], 500);
        }
    }

    // ‚úÖ 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö OTP ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å
    public function verifyMailOtp(Request $request)
    {
        $email = Session::get('otp_email');
        $otp = $request->input('otp');

        if (!$email) {
            return response()->json(['error' => '‡πÑ‡∏°‡πà‡∏°‡∏µ OTP ‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö'], 400);
        }

        // ‚úÖ ‡∏î‡∏∂‡∏á API Key ‡∏à‡∏≤‡∏Å .env
        $apiKey = env('THAIBULKSMS_API_KEY');

        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö OTP
        $response = Http::withHeaders([
            'accept' => 'application/json',
            'authorization' => 'Basic ' . base64_encode($apiKey),
            'content-type' => 'application/json'
        ])->post('https://email-api.thaibulksms.com/email/v1/otp/verify', [
            'recipient_email' => $email,
            'otp' => $otp
        ]);

        // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÑ‡∏´‡∏°
        if ($response->successful()) {
            Session::put('otp_verified', true); // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP ‡πÅ‡∏•‡πâ‡∏ß
            Session::forget('otp_email'); // üî• ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• OTP ‡∏ó‡∏¥‡πâ‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

            return response()->json(['success' => 'OTP ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á']);
        } else {
            return response()->json([
                'error' => 'OTP ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á',
                'details' => $response->json()
            ], 400);
        }
    }
}
